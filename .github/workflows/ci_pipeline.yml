name: CI - IrviQuiz

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  IMAGE_API: irvids/irviquiz-api
  IMAGE_WEB: irvids/irviquiz-web

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
    - name: Code Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false  # Evita conflito com GITHUB_TOKEN

    - name: (Simulated) Tests and lint
      run: |
        echo "✅ Rodando lint e testes simulados..."
        echo "✅ Testes fictícios passaram com sucesso!"

    - name: Generate TAG
      run: echo "TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build & Push Backend
      run: |
        docker build -t $IMAGE_API:$TAG -t $IMAGE_API:latest ./IrviQuiz.API
        docker push $IMAGE_API:$TAG
        docker push $IMAGE_API:latest

    - name: Build & Push Frontend
      run: |
        docker build -t $IMAGE_WEB:$TAG -t $IMAGE_WEB:latest ./IrviQuiz.Web
        docker push $IMAGE_WEB:$TAG
        docker push $IMAGE_WEB:latest

    - name: Update Kubernetes manifests with new TAG
      run: |
        sed -i "s|\(image: irvids/irviquiz-api:\).*|\1$TAG|" k8s/irviquiz-api-deployment.yaml
        sed -i "s|\(image: irvids/irviquiz-web:\).*|\1$TAG|" k8s/irviquiz-web-deployment.yaml

    - name: Commit & Push updated manifests
      env:
        GH_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/irvi01/IrviQuiz.git
        git add k8s/*.yaml
        git commit -m "Atualiza manifests para TAG $TAG" || echo "Nenhuma alteração para commitar"
        git push origin master

    - name: Generate release body
      run: |
        echo "Nova versão do IrviQuiz gerada automaticamente." > release_body.md
        echo "Backend: $IMAGE_API:$TAG" >> release_body.md
        echo "Frontend: $IMAGE_WEB:$TAG" >> release_body.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG }}
        name: "Release ${{ env.TAG }}"
        body_path: release_body.md
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
        TAG: ${{ env.TAG }}
